{
  "stats": {
    "suites": 3,
    "tests": 4,
    "passes": 3,
    "pending": 0,
    "failures": 1,
    "start": "2025-05-31T17:30:22.427Z",
    "end": "2025-05-31T17:30:23.402Z",
    "duration": 975,
    "testsRegistered": 4,
    "passPercent": 75,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "e94a6310-6cca-4423-8133-670bb2f77f58",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e66761db-3545-42f9-9f7e-d952dc8842ad",
          "title": "Primeiro exemplo com PactumJS",
          "fullFile": "C:\\Users\\momon\\Documents\\dev\\pactumJS\\tests\\exemplo1.test.js",
          "file": "\\tests\\exemplo1.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deve retornar 200 da API pública",
              "fullTitle": "Primeiro exemplo com PactumJS Deve retornar 200 da API pública",
              "timedOut": false,
              "duration": 155,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await pactum.spec()\n    .get('https://jsonplaceholder.typicode.com/posts/1')\n    .expectStatus(200)\n    .expectJsonLike({\n        id: 1\n    });",
              "err": {},
              "uuid": "f1baa166-79c5-45d8-83ea-b0cafc6e9145",
              "parentUUID": "e66761db-3545-42f9-9f7e-d952dc8842ad",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f1baa166-79c5-45d8-83ea-b0cafc6e9145"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 155,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "019ba79e-8ea6-456d-bc79-3da4c65b2873",
          "title": "Exercícios básicos com PactumJS",
          "fullFile": "C:\\Users\\momon\\Documents\\dev\\pactumJS\\tests\\exemplo2.test.js",
          "file": "\\tests\\exemplo2.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deve retornar os usuários aleatórios",
              "fullTitle": "Exercícios básicos com PactumJS Deve retornar os usuários aleatórios",
              "timedOut": false,
              "duration": 214,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await spec()\n    .get(api);",
              "err": {},
              "uuid": "faceaee1-ea3f-4e01-a840-54dc66344d28",
              "parentUUID": "019ba79e-8ea6-456d-bc79-3da4c65b2873",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve obter os usuários masculinos",
              "fullTitle": "Exercícios básicos com PactumJS Deve obter os usuários masculinos",
              "timedOut": false,
              "duration": 400,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response= await spec()\n    .get(api)\n    .withQueryParams('gender', 'male')\n    .expectStatus(200)\n    .expectJsonLike({\n        \"results\": [{\n            \"gender\": \"male\"\n        }]\n    });\n    const users = response.body.results;\n    users.forEach(user => {\n      console.log(user.name.first);\n    });\n    printLog(response);",
              "err": {},
              "uuid": "1c53820e-bb8b-4da3-9b29-bf95fd91c6ac",
              "parentUUID": "019ba79e-8ea6-456d-bc79-3da4c65b2873",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "faceaee1-ea3f-4e01-a840-54dc66344d28",
            "1c53820e-bb8b-4da3-9b29-bf95fd91c6ac"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 614,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a0a7f257-6bfe-4bf7-8945-55871805937b",
          "title": "Como o PactumJS trata testes com falha",
          "fullFile": "C:\\Users\\momon\\Documents\\dev\\pactumJS\\tests\\exemplo3.test.js",
          "file": "\\tests\\exemplo3.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deve obter os usuários femininos",
              "fullTitle": "Como o PactumJS trata testes com falha Deve obter os usuários femininos",
              "timedOut": false,
              "duration": 183,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const response= await spec()\n    .get(api)\n    .withQueryParams('gender', 'male')\n    .expectStatus(201)\n    .expectJsonLike({\n        \"results\": [{\n            \"gender\": \"female\"\n        }]\n    });",
              "err": {
                "message": "AssertionError: HTTP status 200 !== 201\n\n200 !== 201\n",
                "estack": "AssertionError [ERR_ASSERTION]: HTTP status 200 !== 201\n\n200 !== 201\n\n    at Expect._validateStatus (node_modules\\pactum\\src\\models\\expect.js:106:14)\n    at Expect.validate (node_modules\\pactum\\src\\models\\expect.js:47:10)\n    at Tosser.validateResponse (node_modules\\pactum\\src\\models\\Tosser.js:255:23)\n    at Tosser.validate (node_modules\\pactum\\src\\models\\Tosser.js:219:18)\n    at Tosser.toss (node_modules\\pactum\\src\\models\\Tosser.js:46:18)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)",
                "diff": "- 200\n+ 201\n"
              },
              "uuid": "385fa166-8854-4c30-841e-13ddf03aca3a",
              "parentUUID": "a0a7f257-6bfe-4bf7-8945-55871805937b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "385fa166-8854-4c30-841e-13ddf03aca3a"
          ],
          "pending": [],
          "skipped": [],
          "duration": 183,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "11.5.0"
    },
    "mochawesome": {
      "options": {
        "quiet": true,
        "reportFilename": "relatorio",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "reports",
        "reportFilename": "relatorio",
        "quiet": "true"
      },
      "version": "6.2.0"
    }
  }
}